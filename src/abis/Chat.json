{
  "contractName": "Chat",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "messageSentEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "message",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct Chat.Message[]",
          "name": "messages",
          "type": "tuple[]"
        }
      ],
      "name": "messagesFetchAllEvent",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "messages",
      "outputs": [
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "sendMessage",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "getAllMessages",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"messageSentEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct Chat.Message[]\",\"name\":\"messages\",\"type\":\"tuple[]\"}],\"name\":\"messagesFetchAllEvent\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"getAllMessages\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"messages\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"sendMessage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/Chat.sol\":\"Chat\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/src/contracts/Chat.sol\":{\"keccak256\":\"0xfeb69e2b3df1f9329d1478e1a9701c1fe9bd6f1a809597d31d05223f79597a85\",\"urls\":[\"bzz-raw://3704f4d6fee4b5dc7824fe550ba9d175a676340c480377977e8166b4658d1942\",\"dweb:/ipfs/QmX3wuUHTpfeqopSqNTTawKW6k19gT4cLAHra9TrSEwLWb\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280600e81526020017f626c61636b2d6861742d636861740000000000000000000000000000000000008152506000908051906020019061004f929190610062565b5034801561005c57600080fd5b50610107565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100a357805160ff19168380011785556100d1565b828001600101855582156100d1579182015b828111156100d05782518255916020019190600101906100b5565b5b5090506100de91906100e2565b5090565b61010491905b808211156101005760008160009055506001016100e8565b5090565b90565b610e44806101166000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806306fdde031461005157806329b2ec641461006f57806374e96a4f1461008b578063de6f24bb146100bc575b600080fd5b6100596100d8565b6040516100669190610ba5565b60405180910390f35b610089600480360361008491908101906108c7565b610176565b005b6100a560048036036100a091908101906108f0565b6103c6565b6040516100b3929190610be9565b60405180910390f35b6100d660048036036100d1919081019061093f565b6104c9565b005b60008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561016e5780601f106101435761010080835404028352916020019161016e565b820191906000526020600020905b81548152906001019060200180831161015157829003601f168201915b505050505081565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050146102e2578073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fbcf941aa42135656a8ef9673496b2e8ad15797196f3a9bd02b4a550c4c4cf26c600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040516102d59190610b83565b60405180910390a36103c3565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fbcf941aa42135656a8ef9673496b2e8ad15797196f3a9bd02b4a550c4c4cf26c600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040516103ba9190610b83565b60405180910390a35b50565b600160205282600052604060002060205281600052604060002081815481106103eb57fe5b90600052602060002090600202016000925092505050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104995780601f1061046e57610100808354040283529160200191610499565b820191906000526020600020905b81548152906001019060200180831161047c57829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000190805190602001906105b79291906107a4565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000190805190602001906106f09291906107a4565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6dc15866f16ccb265afd212167fbcae0b0fd203ba4bad85d6e53c8733d5248df836040516107989190610bc7565b60405180910390a35050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106107e557805160ff1916838001178555610813565b82800160010185558215610813579182015b828111156108125782518255916020019190600101906107f7565b5b5090506108209190610824565b5090565b61084691905b8082111561084257600081600090555060010161082a565b5090565b90565b60008135905061085881610dd3565b92915050565b600082601f83011261086f57600080fd5b813561088261087d82610c46565b610c19565b9150808252602083016020830185838301111561089e57600080fd5b6108a9838284610d59565b50505092915050565b6000813590506108c181610dea565b92915050565b6000602082840312156108d957600080fd5b60006108e784828501610849565b91505092915050565b60008060006060848603121561090557600080fd5b600061091386828701610849565b935050602061092486828701610849565b9250506040610935868287016108b2565b9150509250925092565b6000806040838503121561095257600080fd5b600061096085828601610849565b925050602083013567ffffffffffffffff81111561097d57600080fd5b6109898582860161085e565b9150509250929050565b600061099f8383610b3a565b905092915050565b6109b081610d1d565b82525050565b6109bf81610d1d565b82525050565b60006109d082610c9c565b6109da8185610cca565b9350836020820285016109ec85610c72565b8060005b85811015610a2757848403895281610a088582610993565b9450610a1383610cbd565b925060208a019950506001810190506109f0565b50829750879550505050505092915050565b6000610a4482610cb2565b610a4e8185610cec565b9350610a5e818560208601610d68565b610a6781610db5565b840191505092915050565b6000610a7d82610ca7565b610a878185610cec565b9350610a97818560208601610d68565b610aa081610db5565b840191505092915050565b600081546001811660008114610ac85760018114610aee57610b32565b607f6002830416610ad98187610cdb565b955060ff198316865260208601935050610b32565b60028204610afc8187610cdb565b9550610b0785610c87565b60005b82811015610b2957815481890152600182019150602081019050610b0a565b80880195505050505b505092915050565b60006040830160008084018583036000870152610b578382610aab565b92505060018401549050610b6a81610d9b565b610b7760208701826109a7565b50819250505092915050565b60006020820190508181036000830152610b9d81846109c5565b905092915050565b60006020820190508181036000830152610bbf8184610a72565b905092915050565b60006020820190508181036000830152610be18184610a39565b905092915050565b60006040820190508181036000830152610c038185610a72565b9050610c1260208301846109b6565b9392505050565b6000604051905081810181811067ffffffffffffffff82111715610c3c57600080fd5b8060405250919050565b600067ffffffffffffffff821115610c5d57600080fd5b601f19601f8301169050602081019050919050565b60008190508160005260206000209050919050565b60008190508160005260206000209050919050565b600081549050919050565b600081519050919050565b600081519050919050565b6000600282019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d2882610d2f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610d86578082015181840152602081019050610d6b565b83811115610d95576000848401525b50505050565b6000610dae610da983610dc6565b610cfd565b9050919050565b6000601f19601f8301169050919050565b60008160001c9050919050565b610ddc81610d1d565b8114610de757600080fd5b50565b610df381610d4f565b8114610dfe57600080fd5b5056fea365627a7a7231582076c4b5f124c2b0c0ba1947f11fe5128a83d30e180cd4d4fcf4a3a2af315129b46c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806306fdde031461005157806329b2ec641461006f57806374e96a4f1461008b578063de6f24bb146100bc575b600080fd5b6100596100d8565b6040516100669190610ba5565b60405180910390f35b610089600480360361008491908101906108c7565b610176565b005b6100a560048036036100a091908101906108f0565b6103c6565b6040516100b3929190610be9565b60405180910390f35b6100d660048036036100d1919081019061093f565b6104c9565b005b60008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561016e5780601f106101435761010080835404028352916020019161016e565b820191906000526020600020905b81548152906001019060200180831161015157829003601f168201915b505050505081565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050146102e2578073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fbcf941aa42135656a8ef9673496b2e8ad15797196f3a9bd02b4a550c4c4cf26c600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040516102d59190610b83565b60405180910390a36103c3565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fbcf941aa42135656a8ef9673496b2e8ad15797196f3a9bd02b4a550c4c4cf26c600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040516103ba9190610b83565b60405180910390a35b50565b600160205282600052604060002060205281600052604060002081815481106103eb57fe5b90600052602060002090600202016000925092505050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104995780601f1061046e57610100808354040283529160200191610499565b820191906000526020600020905b81548152906001019060200180831161047c57829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000190805190602001906105b79291906107a4565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000190805190602001906106f09291906107a4565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6dc15866f16ccb265afd212167fbcae0b0fd203ba4bad85d6e53c8733d5248df836040516107989190610bc7565b60405180910390a35050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106107e557805160ff1916838001178555610813565b82800160010185558215610813579182015b828111156108125782518255916020019190600101906107f7565b5b5090506108209190610824565b5090565b61084691905b8082111561084257600081600090555060010161082a565b5090565b90565b60008135905061085881610dd3565b92915050565b600082601f83011261086f57600080fd5b813561088261087d82610c46565b610c19565b9150808252602083016020830185838301111561089e57600080fd5b6108a9838284610d59565b50505092915050565b6000813590506108c181610dea565b92915050565b6000602082840312156108d957600080fd5b60006108e784828501610849565b91505092915050565b60008060006060848603121561090557600080fd5b600061091386828701610849565b935050602061092486828701610849565b9250506040610935868287016108b2565b9150509250925092565b6000806040838503121561095257600080fd5b600061096085828601610849565b925050602083013567ffffffffffffffff81111561097d57600080fd5b6109898582860161085e565b9150509250929050565b600061099f8383610b3a565b905092915050565b6109b081610d1d565b82525050565b6109bf81610d1d565b82525050565b60006109d082610c9c565b6109da8185610cca565b9350836020820285016109ec85610c72565b8060005b85811015610a2757848403895281610a088582610993565b9450610a1383610cbd565b925060208a019950506001810190506109f0565b50829750879550505050505092915050565b6000610a4482610cb2565b610a4e8185610cec565b9350610a5e818560208601610d68565b610a6781610db5565b840191505092915050565b6000610a7d82610ca7565b610a878185610cec565b9350610a97818560208601610d68565b610aa081610db5565b840191505092915050565b600081546001811660008114610ac85760018114610aee57610b32565b607f6002830416610ad98187610cdb565b955060ff198316865260208601935050610b32565b60028204610afc8187610cdb565b9550610b0785610c87565b60005b82811015610b2957815481890152600182019150602081019050610b0a565b80880195505050505b505092915050565b60006040830160008084018583036000870152610b578382610aab565b92505060018401549050610b6a81610d9b565b610b7760208701826109a7565b50819250505092915050565b60006020820190508181036000830152610b9d81846109c5565b905092915050565b60006020820190508181036000830152610bbf8184610a72565b905092915050565b60006020820190508181036000830152610be18184610a39565b905092915050565b60006040820190508181036000830152610c038185610a72565b9050610c1260208301846109b6565b9392505050565b6000604051905081810181811067ffffffffffffffff82111715610c3c57600080fd5b8060405250919050565b600067ffffffffffffffff821115610c5d57600080fd5b601f19601f8301169050602081019050919050565b60008190508160005260206000209050919050565b60008190508160005260206000209050919050565b600081549050919050565b600081519050919050565b600081519050919050565b6000600282019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d2882610d2f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610d86578082015181840152602081019050610d6b565b83811115610d95576000848401525b50505050565b6000610dae610da983610dc6565b610cfd565b9050919050565b6000601f19601f8301169050919050565b60008160001c9050919050565b610ddc81610d1d565b8114610de757600080fd5b50565b610df381610d4f565b8114610dfe57600080fd5b5056fea365627a7a7231582076c4b5f124c2b0c0ba1947f11fe5128a83d30e180cd4d4fcf4a3a2af315129b46c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "68:1018:0:-;;;88:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;68:1018;8:9:-1;5:2;;;30:1;27;20:12;5:2;68:1018:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "68:1018:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;68:1018:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;88:37;;;:::i;:::-;;;;;;;;;;;;;;;;791:293;;;;;;;;;;;;;;;;:::i;:::-;;206:65;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;521:264;;;;;;;;;;;;;;;;:::i;:::-;;88:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;791:293::-;883:1;848:8;:20;857:10;848:20;;;;;;;;;;;;;;;:24;869:2;848:24;;;;;;;;;;;;;;;:31;;;;:36;844:234;;939:2;905:63;;927:10;905:63;;;943:8;:20;952:10;943:20;;;;;;;;;;;;;;;:24;964:2;943:24;;;;;;;;;;;;;;;905:63;;;;;;;;;;;;;;;844:234;;;1038:2;1004:63;;1026:10;1004:63;;;1042:8;:12;1051:2;1042:12;;;;;;;;;;;;;;;:24;1055:10;1042:24;;;;;;;;;;;;;;;1004:63;;;;;;;;;;;;;;;844:234;791:293;:::o;206:65::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;521:264::-;594:8;:20;603:10;594:20;;;;;;;;;;;;;;;:24;615:2;594:24;;;;;;;;;;;;;;;624:28;;;;;;;;632:7;624:28;;;;641:10;624:28;;;;;594:59;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;594:59:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;663:8;:12;672:2;663:12;;;;;;;;;;;;;;;:24;676:10;663:24;;;;;;;;;;;;;;;693:28;;;;;;;;701:7;693:28;;;;710:10;693:28;;;;;663:59;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;663:59:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;766:2;737:41;;754:10;737:41;;;770:7;737:41;;;;;;;;;;;;;;;521:264;;:::o;68:1018::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;143:442;;245:3;238:4;230:6;226:17;222:27;212:2;;263:1;260;253:12;212:2;300:6;287:20;322:65;337:49;379:6;337:49;;;322:65;;;313:74;;407:6;400:5;393:21;443:4;435:6;431:17;476:4;469:5;465:16;511:3;502:6;497:3;493:16;490:25;487:2;;;528:1;525;518:12;487:2;538:41;572:6;567:3;562;538:41;;;205:380;;;;;;;;593:130;;673:6;660:20;651:29;;685:33;712:5;685:33;;;645:78;;;;;730:241;;834:2;822:9;813:7;809:23;805:32;802:2;;;850:1;847;840:12;802:2;885:1;902:53;947:7;938:6;927:9;923:22;902:53;;;892:63;;864:97;796:175;;;;;978:491;;;;1116:2;1104:9;1095:7;1091:23;1087:32;1084:2;;;1132:1;1129;1122:12;1084:2;1167:1;1184:53;1229:7;1220:6;1209:9;1205:22;1184:53;;;1174:63;;1146:97;1274:2;1292:53;1337:7;1328:6;1317:9;1313:22;1292:53;;;1282:63;;1253:98;1382:2;1400:53;1445:7;1436:6;1425:9;1421:22;1400:53;;;1390:63;;1361:98;1078:391;;;;;;1476:472;;;1607:2;1595:9;1586:7;1582:23;1578:32;1575:2;;;1623:1;1620;1613:12;1575:2;1658:1;1675:53;1720:7;1711:6;1700:9;1696:22;1675:53;;;1665:63;;1637:97;1793:2;1782:9;1778:18;1765:32;1817:18;1809:6;1806:30;1803:2;;;1849:1;1846;1839:12;1803:2;1869:63;1924:7;1915:6;1904:9;1900:22;1869:63;;;1859:73;;1744:194;1569:379;;;;;;1956:235;;2096:89;2181:3;2173:6;2096:89;;;2082:103;;2075:116;;;;;2199:103;2272:24;2290:5;2272:24;;;2267:3;2260:37;2254:48;;;2309:113;2392:24;2410:5;2392:24;;;2387:3;2380:37;2374:48;;;2484:986;;2665:71;2730:5;2665:71;;;2749:105;2847:6;2842:3;2749:105;;;2742:112;;2877:3;2919:4;2911:6;2907:17;2902:3;2898:27;2946:73;3013:5;2946:73;;;3039:7;3067:1;3052:379;3077:6;3074:1;3071:13;3052:379;;;3139:9;3133:4;3129:20;3124:3;3117:33;3178:6;3199:103;3297:4;3282:13;3199:103;;;3191:111;;3319:77;3389:6;3319:77;;;3309:87;;3419:4;3414:3;3410:14;3403:21;;3109:322;3099:1;3096;3092:9;3087:14;;3052:379;;;3056:14;3444:4;3437:11;;3461:3;3454:10;;2644:826;;;;;;;;;;3478:347;;3590:39;3623:5;3590:39;;;3641:71;3705:6;3700:3;3641:71;;;3634:78;;3717:52;3762:6;3757:3;3750:4;3743:5;3739:16;3717:52;;;3790:29;3812:6;3790:29;;;3785:3;3781:39;3774:46;;3570:255;;;;;;3832:339;;3940:35;3969:5;3940:35;;;3987:71;4051:6;4046:3;3987:71;;;3980:78;;4063:52;4108:6;4103:3;4096:4;4089:5;4085:16;4063:52;;;4136:29;4158:6;4136:29;;;4131:3;4127:39;4120:46;;3920:251;;;;;;4203:793;;4312:5;4306:12;4346:1;4335:9;4331:17;4359:1;4354:238;;;;4603:1;4598:392;;;;4324:666;;4354:238;4432:4;4428:1;4417:9;4413:17;4409:28;4451:61;4505:6;4500:3;4451:61;;;4444:68;;4550:4;4546:9;4535;4531:25;4526:3;4519:38;4580:4;4575:3;4571:14;4564:21;;4361:231;4354:238;;4598:392;4667:1;4656:9;4652:17;4683:61;4737:6;4732:3;4683:61;;;4676:68;;4766:38;4798:5;4766:38;;;4820:1;4828:130;4842:6;4839:1;4836:13;4828:130;;;4907:7;4901:14;4897:1;4892:3;4888:11;4881:35;4948:1;4939:7;4935:15;4924:26;;4864:4;4861:1;4857:12;4852:17;;4828:130;;;4981:1;4976:3;4972:11;4965:18;;4605:385;;;4324:666;;4282:714;;;;;;5053:633;;5187:4;5182:3;5178:14;5214:1;5285:4;5278:5;5274:16;5336:3;5330:4;5326:14;5319:4;5314:3;5310:14;5303:38;5356:70;5421:4;5407:12;5356:70;;;5348:78;;5225:213;5498:4;5491:5;5487:16;5481:23;5468:36;;5530:55;5575:9;5530:55;;;5591:63;5648:4;5643:3;5639:14;5625:12;5591:63;;;5448:212;5677:4;5670:11;;5160:526;;;;;;;5693:433;;5897:2;5886:9;5882:18;5874:26;;5947:9;5941:4;5937:20;5933:1;5922:9;5918:17;5911:47;5972:144;6111:4;6102:6;5972:144;;;5964:152;;5868:258;;;;;6133:293;;6267:2;6256:9;6252:18;6244:26;;6317:9;6311:4;6307:20;6303:1;6292:9;6288:17;6281:47;6342:74;6411:4;6402:6;6342:74;;;6334:82;;6238:188;;;;;6433:301;;6571:2;6560:9;6556:18;6548:26;;6621:9;6615:4;6611:20;6607:1;6596:9;6592:17;6585:47;6646:78;6719:4;6710:6;6646:78;;;6638:86;;6542:192;;;;;6741:404;;6903:2;6892:9;6888:18;6880:26;;6953:9;6947:4;6943:20;6939:1;6928:9;6924:17;6917:47;6978:74;7047:4;7038:6;6978:74;;;6970:82;;7063:72;7131:2;7120:9;7116:18;7107:6;7063:72;;;6874:271;;;;;;7152:256;;7214:2;7208:9;7198:19;;7252:4;7244:6;7240:17;7351:6;7339:10;7336:22;7315:18;7303:10;7300:34;7297:62;7294:2;;;7372:1;7369;7362:12;7294:2;7392:10;7388:2;7381:22;7192:216;;;;;7415:322;;7559:18;7551:6;7548:30;7545:2;;;7591:1;7588;7581:12;7545:2;7658:4;7654:9;7647:4;7639:6;7635:17;7631:33;7623:41;;7722:4;7716;7712:15;7704:23;;7482:255;;;;7744:193;;7847:3;7839:11;;7884:3;7881:1;7874:14;7916:4;7913:1;7903:18;7895:26;;7833:104;;;;7944:158;;8012:3;8004:11;;8049:3;8046:1;8039:14;8081:4;8078:1;8068:18;8060:26;;7998:104;;;;8109:161;;8241:5;8235:12;8225:22;;8200:70;;;;8277:118;;8367:5;8361:12;8351:22;;8332:63;;;;8402:122;;8496:5;8490:12;8480:22;;8461:63;;;;8531:125;;8646:4;8641:3;8637:14;8629:22;;8623:33;;;;8664:197;;8813:6;8808:3;8801:19;8850:4;8845:3;8841:14;8826:29;;8794:67;;;;;8870:153;;8975:6;8970:3;8963:19;9012:4;9007:3;9003:14;8988:29;;8956:67;;;;;9032:163;;9147:6;9142:3;9135:19;9184:4;9179:3;9175:14;9160:29;;9128:67;;;;;9203:134;;9289:42;9282:5;9278:54;9267:65;;9261:76;;;;9344:91;;9406:24;9424:5;9406:24;;;9395:35;;9389:46;;;;9442:121;;9515:42;9508:5;9504:54;9493:65;;9487:76;;;;9570:72;;9632:5;9621:16;;9615:27;;;;9650:145;9731:6;9726:3;9721;9708:30;9787:1;9778:6;9773:3;9769:16;9762:27;9701:94;;;;9804:268;9869:1;9876:101;9890:6;9887:1;9884:13;9876:101;;;9966:1;9961:3;9957:11;9951:18;9947:1;9942:3;9938:11;9931:39;9912:2;9909:1;9905:10;9900:15;;9876:101;;;9992:6;9989:1;9986:13;9983:2;;;10057:1;10048:6;10043:3;10039:16;10032:27;9983:2;9853:219;;;;;10080:161;;10170:66;10201:34;10224:10;10201:34;;;10170:66;;;10161:75;;10155:86;;;;10248:97;;10336:2;10332:7;10327:2;10320:5;10316:14;10312:28;10302:38;;10296:49;;;;10353:102;;10439:5;10436:1;10432:13;10410:35;;10404:51;;;;10463:117;10532:24;10550:5;10532:24;;;10525:5;10522:35;10512:2;;10571:1;10568;10561:12;10512:2;10506:74;;10587:117;10656:24;10674:5;10656:24;;;10649:5;10646:35;10636:2;;10695:1;10692;10685:12;10636:2;10630:74;",
  "source": "pragma solidity >=0.4.21 <0.6.0;\npragma experimental ABIEncoderV2;\n\ncontract Chat {\n    string public name = \"black-hat-chat\";\n\n    struct Message {\n        string message;\n        address from;\n    }\n\n    mapping(address => mapping(address => Message[])) public messages;\n\n    event messageSentEvent(\n        address indexed from,\n        address indexed to,\n        string message\n    );\n\n    event messagesFetchAllEvent(\n        address indexed from,\n        address indexed to,\n        Message[] messages\n    );\n\n    function sendMessage(address to, string memory message) public {\n        messages[msg.sender][to].push(Message(message, msg.sender));\n        messages[to][msg.sender].push(Message(message, msg.sender));\n        emit messageSentEvent(msg.sender, to, message);\n    }\n\n    function getAllMessages(address to) public {\n        if (messages[msg.sender][to].length != 0) {\n            emit messagesFetchAllEvent(msg.sender, to, messages[msg.sender][to]);\n        } else {\n            emit messagesFetchAllEvent(msg.sender, to, messages[to][msg.sender]);\n        }\n    }\n}\n",
  "sourcePath": "/Users/clarenceadrian/Documents/academia/cpen442/blockchain-chat/src/contracts/Chat.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/Chat.sol",
    "exportedSymbols": {
      "Chat": [
        120
      ]
    },
    "id": 121,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 120,
        "linearizedBaseContracts": [
          120
        ],
        "name": "Chat",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 120,
            "src": "88:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "88:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "626c61636b2d6861742d63686174",
              "id": 4,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "109:16:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_6946cf6c0bcad1891e52fe04c45e523e755d7779806e14d7c221833700997165",
                "typeString": "literal_string \"black-hat-chat\""
              },
              "value": "black-hat-chat"
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Chat.Message",
            "id": 10,
            "members": [
              {
                "constant": false,
                "id": 7,
                "name": "message",
                "nodeType": "VariableDeclaration",
                "scope": 10,
                "src": "157:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 6,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "157:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "name": "from",
                "nodeType": "VariableDeclaration",
                "scope": 10,
                "src": "181:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 8,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "181:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Message",
            "nodeType": "StructDefinition",
            "scope": 120,
            "src": "132:68:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 17,
            "name": "messages",
            "nodeType": "VariableDeclaration",
            "scope": 120,
            "src": "206:65:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$10_storage_$dyn_storage_$_$",
              "typeString": "mapping(address => mapping(address => struct Chat.Message[]))"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 11,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "214:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "206:49:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$10_storage_$dyn_storage_$_$",
                "typeString": "mapping(address => mapping(address => struct Chat.Message[]))"
              },
              "valueType": {
                "id": 15,
                "keyType": {
                  "id": 12,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "233:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "225:29:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$10_storage_$dyn_storage_$",
                  "typeString": "mapping(address => struct Chat.Message[])"
                },
                "valueType": {
                  "baseType": {
                    "contractScope": null,
                    "id": 13,
                    "name": "Message",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10,
                    "src": "244:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Message_$10_storage_ptr",
                      "typeString": "struct Chat.Message"
                    }
                  },
                  "id": 14,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "244:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Message_$10_storage_$dyn_storage_ptr",
                    "typeString": "struct Chat.Message[]"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 25,
            "name": "messageSentEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "310:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "310:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "340:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "340:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "indexed": false,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "368:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "368:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "300:88:0"
            },
            "src": "278:111:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 34,
            "name": "messagesFetchAllEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "432:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "432:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "462:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "462:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "indexed": false,
                  "name": "messages",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "490:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Message_$10_memory_$dyn_memory_ptr",
                    "typeString": "struct Chat.Message[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 30,
                      "name": "Message",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 10,
                      "src": "490:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Message_$10_storage_ptr",
                        "typeString": "struct Chat.Message"
                      }
                    },
                    "id": 31,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "490:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Message_$10_storage_$dyn_storage_ptr",
                      "typeString": "struct Chat.Message[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "422:92:0"
            },
            "src": "395:120:0"
          },
          {
            "body": {
              "id": 76,
              "nodeType": "Block",
              "src": "584:201:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 49,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "632:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 50,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "641:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 51,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "641:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 48,
                          "name": "Message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "624:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Message_$10_storage_ptr_$",
                            "typeString": "type(struct Chat.Message storage pointer)"
                          }
                        },
                        "id": 52,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "624:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Message_$10_memory",
                          "typeString": "struct Chat.Message memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Message_$10_memory",
                          "typeString": "struct Chat.Message memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 41,
                            "name": "messages",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "594:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$10_storage_$dyn_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct Chat.Message storage ref[] storage ref))"
                            }
                          },
                          "id": 45,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 42,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "603:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 43,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "603:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "594:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$10_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Chat.Message storage ref[] storage ref)"
                          }
                        },
                        "id": 46,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 44,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "615:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "594:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Message_$10_storage_$dyn_storage",
                          "typeString": "struct Chat.Message storage ref[] storage ref"
                        }
                      },
                      "id": 47,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "594:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Message_$10_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Chat.Message storage ref) returns (uint256)"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "594:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "594:59:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 63,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "701:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 64,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "710:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 65,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "710:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 62,
                          "name": "Message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "693:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Message_$10_storage_ptr_$",
                            "typeString": "type(struct Chat.Message storage pointer)"
                          }
                        },
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "693:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Message_$10_memory",
                          "typeString": "struct Chat.Message memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Message_$10_memory",
                          "typeString": "struct Chat.Message memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 55,
                            "name": "messages",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "663:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$10_storage_$dyn_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct Chat.Message storage ref[] storage ref))"
                            }
                          },
                          "id": 59,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 56,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "672:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "663:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$10_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Chat.Message storage ref[] storage ref)"
                          }
                        },
                        "id": 60,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 57,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 192,
                            "src": "676:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "676:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "663:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Message_$10_storage_$dyn_storage",
                          "typeString": "struct Chat.Message storage ref[] storage ref"
                        }
                      },
                      "id": 61,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "663:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Message_$10_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct Chat.Message storage ref) returns (uint256)"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "663:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "663:59:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 70,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 192,
                          "src": "754:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "754:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 72,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "766:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 73,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "770:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 69,
                      "name": "messageSentEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "737:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "737:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75,
                  "nodeType": "EmitStatement",
                  "src": "732:46:0"
                }
              ]
            },
            "documentation": null,
            "id": 77,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendMessage",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "542:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "542:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "554:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "554:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "541:35:0"
            },
            "returnParameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "584:0:0"
            },
            "scope": 120,
            "src": "521:264:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 118,
              "nodeType": "Block",
              "src": "834:250:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 82,
                            "name": "messages",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "848:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$10_storage_$dyn_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct Chat.Message storage ref[] storage ref))"
                            }
                          },
                          "id": 85,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 83,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "857:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 84,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "857:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "848:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$10_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Chat.Message storage ref[] storage ref)"
                          }
                        },
                        "id": 87,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 86,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79,
                          "src": "869:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "848:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Message_$10_storage_$dyn_storage",
                          "typeString": "struct Chat.Message storage ref[] storage ref"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "848:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "883:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "848:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 116,
                    "nodeType": "Block",
                    "src": "985:93:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 105,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 192,
                                "src": "1026:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1026:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 107,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "1038:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 108,
                                  "name": "messages",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17,
                                  "src": "1042:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$10_storage_$dyn_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct Chat.Message storage ref[] storage ref))"
                                  }
                                },
                                "id": 110,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 109,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 79,
                                  "src": "1051:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1042:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$10_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Chat.Message storage ref[] storage ref)"
                                }
                              },
                              "id": 113,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 111,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 192,
                                  "src": "1055:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 112,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1055:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1042:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Message_$10_storage_$dyn_storage",
                                "typeString": "struct Chat.Message storage ref[] storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_struct$_Message_$10_storage_$dyn_storage",
                                "typeString": "struct Chat.Message storage ref[] storage ref"
                              }
                            ],
                            "id": 104,
                            "name": "messagesFetchAllEvent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "1004:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_struct$_Message_$10_memory_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,struct Chat.Message memory[] memory)"
                            }
                          },
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1004:63:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 115,
                        "nodeType": "EmitStatement",
                        "src": "999:68:0"
                      }
                    ]
                  },
                  "id": 117,
                  "nodeType": "IfStatement",
                  "src": "844:234:0",
                  "trueBody": {
                    "id": 103,
                    "nodeType": "Block",
                    "src": "886:93:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 92,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 192,
                                "src": "927:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 93,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "927:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 94,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "939:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 95,
                                  "name": "messages",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17,
                                  "src": "943:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_struct$_Message_$10_storage_$dyn_storage_$_$",
                                    "typeString": "mapping(address => mapping(address => struct Chat.Message storage ref[] storage ref))"
                                  }
                                },
                                "id": 98,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 96,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 192,
                                    "src": "952:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 97,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "952:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "943:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Message_$10_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Chat.Message storage ref[] storage ref)"
                                }
                              },
                              "id": 100,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 99,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 79,
                                "src": "964:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "943:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Message_$10_storage_$dyn_storage",
                                "typeString": "struct Chat.Message storage ref[] storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_struct$_Message_$10_storage_$dyn_storage",
                                "typeString": "struct Chat.Message storage ref[] storage ref"
                              }
                            ],
                            "id": 91,
                            "name": "messagesFetchAllEvent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "905:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_struct$_Message_$10_memory_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,struct Chat.Message memory[] memory)"
                            }
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "905:63:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 102,
                        "nodeType": "EmitStatement",
                        "src": "900:68:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 119,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllMessages",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "815:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "815:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "814:12:0"
            },
            "returnParameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "834:0:0"
            },
            "scope": 120,
            "src": "791:293:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 121,
        "src": "68:1018:0"
      }
    ],
    "src": "0:1087:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/src/contracts/Chat.sol",
      "exportedSymbols": {
        "Chat": [
          120
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "0:32:0"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 2,
        "name": "PragmaDirective",
        "src": "33:33:0"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            120
          ],
          "name": "Chat",
          "scope": 121
        },
        "children": [
          {
            "attributes": {
              "constant": false,
              "name": "name",
              "scope": 120,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 3,
                "name": "ElementaryTypeName",
                "src": "88:6:0"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "626c61636b2d6861742d63686174",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "string",
                  "type": "literal_string \"black-hat-chat\"",
                  "value": "black-hat-chat"
                },
                "id": 4,
                "name": "Literal",
                "src": "109:16:0"
              }
            ],
            "id": 5,
            "name": "VariableDeclaration",
            "src": "88:37:0"
          },
          {
            "attributes": {
              "canonicalName": "Chat.Message",
              "name": "Message",
              "scope": 120,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "message",
                  "scope": 10,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 6,
                    "name": "ElementaryTypeName",
                    "src": "157:6:0"
                  }
                ],
                "id": 7,
                "name": "VariableDeclaration",
                "src": "157:14:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "from",
                  "scope": 10,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 8,
                    "name": "ElementaryTypeName",
                    "src": "181:7:0"
                  }
                ],
                "id": 9,
                "name": "VariableDeclaration",
                "src": "181:12:0"
              }
            ],
            "id": 10,
            "name": "StructDefinition",
            "src": "132:68:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "messages",
              "scope": 120,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => mapping(address => struct Chat.Message[]))",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => mapping(address => struct Chat.Message[]))"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 11,
                    "name": "ElementaryTypeName",
                    "src": "214:7:0"
                  },
                  {
                    "attributes": {
                      "type": "mapping(address => struct Chat.Message[])"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 12,
                        "name": "ElementaryTypeName",
                        "src": "233:7:0"
                      },
                      {
                        "attributes": {
                          "length": null,
                          "type": "struct Chat.Message[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Message",
                              "referencedDeclaration": 10,
                              "type": "struct Chat.Message"
                            },
                            "id": 13,
                            "name": "UserDefinedTypeName",
                            "src": "244:7:0"
                          }
                        ],
                        "id": 14,
                        "name": "ArrayTypeName",
                        "src": "244:9:0"
                      }
                    ],
                    "id": 15,
                    "name": "Mapping",
                    "src": "225:29:0"
                  }
                ],
                "id": 16,
                "name": "Mapping",
                "src": "206:49:0"
              }
            ],
            "id": 17,
            "name": "VariableDeclaration",
            "src": "206:65:0"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "messageSentEvent"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "from",
                      "scope": 25,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 18,
                        "name": "ElementaryTypeName",
                        "src": "310:7:0"
                      }
                    ],
                    "id": 19,
                    "name": "VariableDeclaration",
                    "src": "310:20:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "to",
                      "scope": 25,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 20,
                        "name": "ElementaryTypeName",
                        "src": "340:7:0"
                      }
                    ],
                    "id": 21,
                    "name": "VariableDeclaration",
                    "src": "340:18:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "message",
                      "scope": 25,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 22,
                        "name": "ElementaryTypeName",
                        "src": "368:6:0"
                      }
                    ],
                    "id": 23,
                    "name": "VariableDeclaration",
                    "src": "368:14:0"
                  }
                ],
                "id": 24,
                "name": "ParameterList",
                "src": "300:88:0"
              }
            ],
            "id": 25,
            "name": "EventDefinition",
            "src": "278:111:0"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "messagesFetchAllEvent"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "from",
                      "scope": 34,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 26,
                        "name": "ElementaryTypeName",
                        "src": "432:7:0"
                      }
                    ],
                    "id": 27,
                    "name": "VariableDeclaration",
                    "src": "432:20:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "to",
                      "scope": 34,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 28,
                        "name": "ElementaryTypeName",
                        "src": "462:7:0"
                      }
                    ],
                    "id": 29,
                    "name": "VariableDeclaration",
                    "src": "462:18:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "messages",
                      "scope": 34,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "struct Chat.Message[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "struct Chat.Message[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Message",
                              "referencedDeclaration": 10,
                              "type": "struct Chat.Message"
                            },
                            "id": 30,
                            "name": "UserDefinedTypeName",
                            "src": "490:7:0"
                          }
                        ],
                        "id": 31,
                        "name": "ArrayTypeName",
                        "src": "490:9:0"
                      }
                    ],
                    "id": 32,
                    "name": "VariableDeclaration",
                    "src": "490:18:0"
                  }
                ],
                "id": 33,
                "name": "ParameterList",
                "src": "422:92:0"
              }
            ],
            "id": 34,
            "name": "EventDefinition",
            "src": "395:120:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "sendMessage",
              "scope": 120,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "scope": 77,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 35,
                        "name": "ElementaryTypeName",
                        "src": "542:7:0"
                      }
                    ],
                    "id": 36,
                    "name": "VariableDeclaration",
                    "src": "542:10:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "message",
                      "scope": 77,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 37,
                        "name": "ElementaryTypeName",
                        "src": "554:6:0"
                      }
                    ],
                    "id": 38,
                    "name": "VariableDeclaration",
                    "src": "554:21:0"
                  }
                ],
                "id": 39,
                "name": "ParameterList",
                "src": "541:35:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 40,
                "name": "ParameterList",
                "src": "584:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Message_$10_memory",
                                  "typeString": "struct Chat.Message memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct Chat.Message storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Chat.Message storage ref[] storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "mapping(address => struct Chat.Message storage ref[] storage ref)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 17,
                                          "type": "mapping(address => mapping(address => struct Chat.Message storage ref[] storage ref))",
                                          "value": "messages"
                                        },
                                        "id": 41,
                                        "name": "Identifier",
                                        "src": "594:8:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "referencedDeclaration": null,
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 192,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 42,
                                            "name": "Identifier",
                                            "src": "603:3:0"
                                          }
                                        ],
                                        "id": 43,
                                        "name": "MemberAccess",
                                        "src": "603:10:0"
                                      }
                                    ],
                                    "id": 45,
                                    "name": "IndexAccess",
                                    "src": "594:20:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 36,
                                      "type": "address",
                                      "value": "to"
                                    },
                                    "id": 44,
                                    "name": "Identifier",
                                    "src": "615:2:0"
                                  }
                                ],
                                "id": 46,
                                "name": "IndexAccess",
                                "src": "594:24:0"
                              }
                            ],
                            "id": 47,
                            "name": "MemberAccess",
                            "src": "594:29:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "struct Chat.Message memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10,
                                  "type": "type(struct Chat.Message storage pointer)",
                                  "value": "Message"
                                },
                                "id": 48,
                                "name": "Identifier",
                                "src": "624:7:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 38,
                                  "type": "string memory",
                                  "value": "message"
                                },
                                "id": 49,
                                "name": "Identifier",
                                "src": "632:7:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 192,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 50,
                                    "name": "Identifier",
                                    "src": "641:3:0"
                                  }
                                ],
                                "id": 51,
                                "name": "MemberAccess",
                                "src": "641:10:0"
                              }
                            ],
                            "id": 52,
                            "name": "FunctionCall",
                            "src": "624:28:0"
                          }
                        ],
                        "id": 53,
                        "name": "FunctionCall",
                        "src": "594:59:0"
                      }
                    ],
                    "id": 54,
                    "name": "ExpressionStatement",
                    "src": "594:59:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Message_$10_memory",
                                  "typeString": "struct Chat.Message memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct Chat.Message storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Chat.Message storage ref[] storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "mapping(address => struct Chat.Message storage ref[] storage ref)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 17,
                                          "type": "mapping(address => mapping(address => struct Chat.Message storage ref[] storage ref))",
                                          "value": "messages"
                                        },
                                        "id": 55,
                                        "name": "Identifier",
                                        "src": "663:8:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 36,
                                          "type": "address",
                                          "value": "to"
                                        },
                                        "id": 56,
                                        "name": "Identifier",
                                        "src": "672:2:0"
                                      }
                                    ],
                                    "id": 59,
                                    "name": "IndexAccess",
                                    "src": "663:12:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 192,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 57,
                                        "name": "Identifier",
                                        "src": "676:3:0"
                                      }
                                    ],
                                    "id": 58,
                                    "name": "MemberAccess",
                                    "src": "676:10:0"
                                  }
                                ],
                                "id": 60,
                                "name": "IndexAccess",
                                "src": "663:24:0"
                              }
                            ],
                            "id": 61,
                            "name": "MemberAccess",
                            "src": "663:29:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "struct Chat.Message memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10,
                                  "type": "type(struct Chat.Message storage pointer)",
                                  "value": "Message"
                                },
                                "id": 62,
                                "name": "Identifier",
                                "src": "693:7:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 38,
                                  "type": "string memory",
                                  "value": "message"
                                },
                                "id": 63,
                                "name": "Identifier",
                                "src": "701:7:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 192,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 64,
                                    "name": "Identifier",
                                    "src": "710:3:0"
                                  }
                                ],
                                "id": 65,
                                "name": "MemberAccess",
                                "src": "710:10:0"
                              }
                            ],
                            "id": 66,
                            "name": "FunctionCall",
                            "src": "693:28:0"
                          }
                        ],
                        "id": 67,
                        "name": "FunctionCall",
                        "src": "663:59:0"
                      }
                    ],
                    "id": 68,
                    "name": "ExpressionStatement",
                    "src": "663:59:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 25,
                              "type": "function (address,address,string memory)",
                              "value": "messageSentEvent"
                            },
                            "id": 69,
                            "name": "Identifier",
                            "src": "737:16:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 192,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 70,
                                "name": "Identifier",
                                "src": "754:3:0"
                              }
                            ],
                            "id": 71,
                            "name": "MemberAccess",
                            "src": "754:10:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 36,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 72,
                            "name": "Identifier",
                            "src": "766:2:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 38,
                              "type": "string memory",
                              "value": "message"
                            },
                            "id": 73,
                            "name": "Identifier",
                            "src": "770:7:0"
                          }
                        ],
                        "id": 74,
                        "name": "FunctionCall",
                        "src": "737:41:0"
                      }
                    ],
                    "id": 75,
                    "name": "EmitStatement",
                    "src": "732:46:0"
                  }
                ],
                "id": 76,
                "name": "Block",
                "src": "584:201:0"
              }
            ],
            "id": 77,
            "name": "FunctionDefinition",
            "src": "521:264:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getAllMessages",
              "scope": 120,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "scope": 119,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 78,
                        "name": "ElementaryTypeName",
                        "src": "815:7:0"
                      }
                    ],
                    "id": 79,
                    "name": "VariableDeclaration",
                    "src": "815:10:0"
                  }
                ],
                "id": 80,
                "name": "ParameterList",
                "src": "814:12:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 81,
                "name": "ParameterList",
                "src": "834:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "!=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Chat.Message storage ref[] storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "mapping(address => struct Chat.Message storage ref[] storage ref)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 17,
                                          "type": "mapping(address => mapping(address => struct Chat.Message storage ref[] storage ref))",
                                          "value": "messages"
                                        },
                                        "id": 82,
                                        "name": "Identifier",
                                        "src": "848:8:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "referencedDeclaration": null,
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 192,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 83,
                                            "name": "Identifier",
                                            "src": "857:3:0"
                                          }
                                        ],
                                        "id": 84,
                                        "name": "MemberAccess",
                                        "src": "857:10:0"
                                      }
                                    ],
                                    "id": 85,
                                    "name": "IndexAccess",
                                    "src": "848:20:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 79,
                                      "type": "address",
                                      "value": "to"
                                    },
                                    "id": 86,
                                    "name": "Identifier",
                                    "src": "869:2:0"
                                  }
                                ],
                                "id": 87,
                                "name": "IndexAccess",
                                "src": "848:24:0"
                              }
                            ],
                            "id": 88,
                            "name": "MemberAccess",
                            "src": "848:31:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 89,
                            "name": "Literal",
                            "src": "883:1:0"
                          }
                        ],
                        "id": 90,
                        "name": "BinaryOperation",
                        "src": "848:36:0"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_array$_t_struct$_Message_$10_storage_$dyn_storage",
                                          "typeString": "struct Chat.Message storage ref[] storage ref"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 34,
                                      "type": "function (address,address,struct Chat.Message memory[] memory)",
                                      "value": "messagesFetchAllEvent"
                                    },
                                    "id": 91,
                                    "name": "Identifier",
                                    "src": "905:21:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 192,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 92,
                                        "name": "Identifier",
                                        "src": "927:3:0"
                                      }
                                    ],
                                    "id": 93,
                                    "name": "MemberAccess",
                                    "src": "927:10:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 79,
                                      "type": "address",
                                      "value": "to"
                                    },
                                    "id": 94,
                                    "name": "Identifier",
                                    "src": "939:2:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Chat.Message storage ref[] storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "mapping(address => struct Chat.Message storage ref[] storage ref)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 17,
                                              "type": "mapping(address => mapping(address => struct Chat.Message storage ref[] storage ref))",
                                              "value": "messages"
                                            },
                                            "id": 95,
                                            "name": "Identifier",
                                            "src": "943:8:0"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "sender",
                                              "referencedDeclaration": null,
                                              "type": "address payable"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 192,
                                                  "type": "msg",
                                                  "value": "msg"
                                                },
                                                "id": 96,
                                                "name": "Identifier",
                                                "src": "952:3:0"
                                              }
                                            ],
                                            "id": 97,
                                            "name": "MemberAccess",
                                            "src": "952:10:0"
                                          }
                                        ],
                                        "id": 98,
                                        "name": "IndexAccess",
                                        "src": "943:20:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 79,
                                          "type": "address",
                                          "value": "to"
                                        },
                                        "id": 99,
                                        "name": "Identifier",
                                        "src": "964:2:0"
                                      }
                                    ],
                                    "id": 100,
                                    "name": "IndexAccess",
                                    "src": "943:24:0"
                                  }
                                ],
                                "id": 101,
                                "name": "FunctionCall",
                                "src": "905:63:0"
                              }
                            ],
                            "id": 102,
                            "name": "EmitStatement",
                            "src": "900:68:0"
                          }
                        ],
                        "id": 103,
                        "name": "Block",
                        "src": "886:93:0"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_array$_t_struct$_Message_$10_storage_$dyn_storage",
                                          "typeString": "struct Chat.Message storage ref[] storage ref"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 34,
                                      "type": "function (address,address,struct Chat.Message memory[] memory)",
                                      "value": "messagesFetchAllEvent"
                                    },
                                    "id": 104,
                                    "name": "Identifier",
                                    "src": "1004:21:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 192,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 105,
                                        "name": "Identifier",
                                        "src": "1026:3:0"
                                      }
                                    ],
                                    "id": 106,
                                    "name": "MemberAccess",
                                    "src": "1026:10:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 79,
                                      "type": "address",
                                      "value": "to"
                                    },
                                    "id": 107,
                                    "name": "Identifier",
                                    "src": "1038:2:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Chat.Message storage ref[] storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "mapping(address => struct Chat.Message storage ref[] storage ref)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 17,
                                              "type": "mapping(address => mapping(address => struct Chat.Message storage ref[] storage ref))",
                                              "value": "messages"
                                            },
                                            "id": 108,
                                            "name": "Identifier",
                                            "src": "1042:8:0"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 79,
                                              "type": "address",
                                              "value": "to"
                                            },
                                            "id": 109,
                                            "name": "Identifier",
                                            "src": "1051:2:0"
                                          }
                                        ],
                                        "id": 110,
                                        "name": "IndexAccess",
                                        "src": "1042:12:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "referencedDeclaration": null,
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 192,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 111,
                                            "name": "Identifier",
                                            "src": "1055:3:0"
                                          }
                                        ],
                                        "id": 112,
                                        "name": "MemberAccess",
                                        "src": "1055:10:0"
                                      }
                                    ],
                                    "id": 113,
                                    "name": "IndexAccess",
                                    "src": "1042:24:0"
                                  }
                                ],
                                "id": 114,
                                "name": "FunctionCall",
                                "src": "1004:63:0"
                              }
                            ],
                            "id": 115,
                            "name": "EmitStatement",
                            "src": "999:68:0"
                          }
                        ],
                        "id": 116,
                        "name": "Block",
                        "src": "985:93:0"
                      }
                    ],
                    "id": 117,
                    "name": "IfStatement",
                    "src": "844:234:0"
                  }
                ],
                "id": 118,
                "name": "Block",
                "src": "834:250:0"
              }
            ],
            "id": 119,
            "name": "FunctionDefinition",
            "src": "791:293:0"
          }
        ],
        "id": 120,
        "name": "ContractDefinition",
        "src": "68:1018:0"
      }
    ],
    "id": 121,
    "name": "SourceUnit",
    "src": "0:1087:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x5a93D0D19a75E466516ECF6278D3E1716094aE50",
      "transactionHash": "0xd14c1764f98d00c3f976bbe1c04a8bc5eaf8a87c247629194275655ab94318c4"
    }
  },
  "schemaVersion": "3.4.11",
  "updatedAt": "2022-11-28T23:49:27.365Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}